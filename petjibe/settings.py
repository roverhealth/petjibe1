"""
Django settings for petjibe project.

Generated by 'django-admin startproject' using Django 2.0.6.

For more information on this file, see
https://docs.djangoproject.com/en/2.0/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/2.0/ref/settings/
"""

import os
from django.conf.global_settings import STATICFILES_DIRS

# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/2.0/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'rqn*6dw$lzs0pdl!cgh@wa(cjs50q7*_c3v)f&dgmc0ra8vt=m'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = ['localhost','127.0.0.1','*','54.242.5.35']


# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'django.contrib.sites',
    #'django.contrib.gis',
    #'django.contrib.sites.models.Site', # all auth
    'rest_framework', # rest framework
    'rest_framework.authtoken', # rest framework
    'pets',
   # 'allauth', # allauth
    #'allauth.account', # allauth
    #'allauth.socialaccount', # allauth
    #'allauth.socialaccount.providers.facebook', # allauth
    "pinax.messages",
   # 'django_mysql',
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'petjibe.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [os.path.join(BASE_DIR,'templates')],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',# `allauth` needs this from django
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
		"pinax.messages.context_processors.user_messages",
            ],
        },
    },
]

WSGI_APPLICATION = 'petjibe.wsgi.application'


#========== local settings is for project specific local settings of database ======
# Database
# https://docs.djangoproject.com/en/2.0/ref/settings/#databases
from .local_settings import *


AUTHENTICATION_BACKENDS = (
    'django.contrib.auth.backends.ModelBackend',     # Needed to login by username in Django admin, regardless of `allauth`  
    #'allauth.account.auth_backends.AuthenticationBackend', # `allauth` specific authentication methods, such as login by e-mail
)

# Password validation
# https://docs.djangoproject.com/en/2.0/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]

# site id add for authentication
SITE_ID = 2

# Internationalization
# https://docs.djangoproject.com/en/2.0/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_L10N = True

USE_TZ = True

SITE_URL = "http://localhost"

#============ static files and media files settings =========
# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/2.0/howto/static-files/
STATIC_URL = '/static/'
STATICFILES_DIRS=[
       os.path.join(BASE_DIR, 'static')
  ]
# STATIC_ROOT = os.path.join(BASE_DIR, 'static')
MEDIA_URL = '/media/'
MEDIA_ROOT = os.path.join(BASE_DIR, 'media')

#========== login url settings ===========
LOGIN_URL='/'
LOGIN_REDIRECT_URL="/index/"

#============ Social account credentials ============
SOCIAL_AUTH_FACEBOOK_KEY = '2081478572074706'  # App ID
SOCIAL_AUTH_FACEBOOK_SECRET ='7305091c93e1ae2f58e8719d8130099b' # App Secret 

#============ Google account credentials ============
GOOGLE_SEARCH_LOCATION = ""
GOOGLE_GEOLOCATION_KEY = ""

#========== email settings ===================
EMAIL_BACKEND = 'django.core.mail.backends.smtp.EmailBackend'
EMAIL_USE_TLS = False
EMAIL_HOST = 'smtpout.europe.secureserver.net'
EMAIL_HOST_USER = 'DoNotReply@petjibe.com'
#CONTACT_EMAIL = 'connect@petjibe.com'
CONTACT_EMAIL = 'DoNotReply@petjibe.com'
#Must generate specific password for your app in [gmail settings][1]
EMAIL_HOST_PASSWORD = 'Naper60564'
EMAIL_PORT = 80
#This did the trick
DEFAULT_FROM_EMAIL = EMAIL_HOST_USER
SERVER_EMAIL=EMAIL_HOST_USER

#========= social account settings for facebook ============
#ACCOUNT_EMAIL_VERIFICATION = "none" # True
#SOCIALACCOUNT_QUERY_EMAIL = True
#SOCIALACCOUNT_PROVIDERS = \
#    {'facebook':
#       {'METHOD': 'oauth2',
#        'SCOPE': ['email','public_profile'],
#        'AUTH_PARAMS': {'auth_type': 'reauthenticate'},
#        'FIELDS': [
#            'id',
#            'email',
#            'name',
#            'first_name',
#            'last_name',
#            'verified',
#            'locale',
#            'timezone',
#            'link',
#            'gender',
#            'updated_time'],
#        'EXCHANGE_TOKEN': True,
#        'LOCALE_FUNC': lambda request: 'kr_KR',
#        'VERIFIED_EMAIL': False,
#        'VERSION': 'v2.4'
#        }
#    }


